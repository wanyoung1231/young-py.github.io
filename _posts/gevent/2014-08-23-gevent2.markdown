---
layout: post
title:  "gevent 学习笔记 —— greenlet源码剖析"
date:   2014-06-28 16:48:45
categories: gevent
author: young
---
![](http://young-py.github.io/imgs/yyzt3.jpg)

在<a style="border-bottom: 2px solid #ecf0f1;" href="http://blog.segmentfault.com/young_ipython/1190000000626309">greenlet篇</a>中只是简单讲述了一下greenlet原理，不知道有没有人对源码感兴趣的，不过我还是比较感兴趣的。对于技术我一直都觉得『
知其然，然后知其所以然』才是最好的，不希望自己只停留在知道用，而不知道为什么这样用，更不希望当别人问起原理的时候回答：“我也不知道，我只知道这样用”。

一篇可能介绍不完，所以可能需要分几部分来介绍。当我写到这的时候突然发现自己是不是写跑题了，本来是写greenlet源码分析的，结果变成了怎么去写Python扩展了。不过不管怎样，就当多学习了一些其他知识，况且分析源码肯定少不了对这些知识的了解。

-----

### **模块初始化**

greenlet是用C编写的一个扩展模块，即用Python去调用C程序。像下面这段代码，内部都是怎样的一个过程呢？

{% highlight python %}
from greenlet import greenlet

def test1():
    print 12
    gr2.switch()
    print 34

def test2():
    print 56
    gr1.switch()
    print 78

gr1 = greenlet(test1)
gr2 = greenlet(test2)
gr1.switch()
{% endhighlight %}

这段代码中，我们看到`from greenlet import greenlet`这句，相信都能明白是导入了一个模块。为什么要导入这个模块呢？这个问题有点瞧不起大家了，因为我们可能需要使用这个模块的某个功能。那在导入这个模块的时候，Python解释器都做了哪些操作呢？









